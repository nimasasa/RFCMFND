for (ii in 1:nrep) {
tmp1 = lm(sample(total)~takers, data=sat);
tmp2 = lm(sample(total)~takers+ratio+salary, data=sat);
fnull[ii] = anova(tmp1, tmp2)$F[2]
}
mean(fnull> Ftest)
fnull
nrep=20; fnull = rep(NA, nrep)
set.seed(98107)
for (ii in 1:nrep) {
tmp1 = lm(sample(total)~takers, data=sat);
tmp2 = lm(sample(total)~takers+ratio+salary, data=sat);
fnull[ii] = anova(tmp1, tmp2)$F[2]
}
mean(fnull> Ftest)
fnull
nrep=10; fnull = rep(NA, nrep)
set.seed(98107)
for (ii in 1:nrep) {
tmp1 = lm(sample(total)~takers, data=sat);
tmp2 = lm(sample(total)~takers+ratio+salary, data=sat);
fnull[ii] = anova(tmp1, tmp2)$F[2]
}
mean(fnull> Ftest)
fnull
nrep=9; fnull = rep(NA, nrep)
set.seed(98107)
for (ii in 1:nrep) {
tmp1 = lm(sample(total)~takers, data=sat);
tmp2 = lm(sample(total)~takers+ratio+salary, data=sat);
fnull[ii] = anova(tmp1, tmp2)$F[2]
}
mean(fnull> Ftest)
fnull
tmp1
tmp2
anova(tmp1, tmp2)$F[2]
anova(tmp1, tmp2)
anova(sat1.lm, sat2.lm)
anova(tmp1, tmp2)$sum
anova(tmp1, tmp2)$SSR
anova(tmp1, tmp2)$ssr
anova(tmp1, tmp2)$S2
anova(tmp1, tmp2)$S
anova(tmp1, tmp2)$Df
anova(tmp1, tmp2)$res
anova(tmp1, tmp2)$RES
anova(tmp1, tmp2)$res
anova(tmp1, tmp2)$res.df
for (ii in 1:nrep) {
tmp1 = lm(sample(total)~takers, data=sat);
tmp2 = lm(sample(total)~takers+ratio+salary, data=sat);
(abs(anova(tmp1, tmp2)$S[2])/2)/()
fnull[ii] = anova(tmp1, tmp2)$F[2]
}
mean(fnull> Ftest)
nrep=9; fnull = rep(NA, nrep)
set.seed(98107)
for (ii in 1:nrep) {
tmp1 = lm(sample(total)~takers, data=sat);
tmp2 = lm(sample(total)~takers+ratio+salary, data=sat);
(abs(anova(tmp1, tmp2)$S[2])/2)/()
fnull[ii] = anova(tmp1, tmp2)$F[2]
}
mean(fnull> Ftest)
# consider 5000 permutations and save the test stat in fnull
nrep=9; fnull = rep(NA, nrep)
set.seed(98107)
for (ii in 1:nrep) {
tmp1 = lm(sample(total)~takers, data=sat);
tmp2 = lm(sample(total)~takers+ratio+salary, data=sat);
fnull[ii] = anova(tmp1, tmp2)$F[2]
}
mean(fnull> Ftest)
anova(tmp1, tmp2)
summary(tmp1)
summary(tmp2)
anova(sat1.lm, sat2.lm)
fnull
anova(tmp1, tmp2)
library(faraway)
data(sat)
sat1.lm=lm(total~takers, data=sat)
sat2.lm=lm(total~takers+ratio+salary, data=sat)
summary(sat1.lm)
summary(sat2.lm)
anova(sat1.lm, sat2.lm)
anova(sat1.lm, sat2.lm)$F[2]
Ftest = anova(sat1.lm, sat2.lm)$F[2]
1-pf(anova(sat1.lm, sat2.lm)$F[2],anova(sat1.lm, sat2.lm)$Df[2],anova(sat1.lm, sat2.lm)$Res[2])
# consider 5000 permutations and save the test stat in fnull
nrep=9; fnull = rep(NA, nrep)
for (ii in 1:nrep) {
set.seed(98107)
tmp1 = lm(sample(total)~takers, data=sat);
tmp2 = lm(sample(total)~takers+ratio+salary, data=sat);
fnull[ii] = anova(tmp1, tmp2)$F[2]
}
mean(fnull> Ftest)
nrep=5000; fnull = rep(NA, nrep)
for (ii in 1:nrep) {
set.seed(98107)
tmp1 = lm(sample(total)~takers, data=sat);
tmp2 = lm(sample(total)~takers+ratio+salary, data=sat);
fnull[ii] = anova(tmp1, tmp2)$F[2]
}
mean(fnull> Ftest)
head(fnull)
sat.sample = sample(sat)
View(sat.sample)
View(sat.sample)
head(sat)
head(sat.sample)
library(faraway)
data(sat)
sat1.lm=lm(total~takers, data=sat)
sat2.lm=lm(total~takers+ratio+salary, data=sat)
summary(sat1.lm)
summary(sat2.lm)
anova(sat1.lm, sat2.lm)
anova(sat1.lm, sat2.lm)$F[2]
Ftest = anova(sat1.lm, sat2.lm)$F[2]
1-pf(anova(sat1.lm, sat2.lm)$F[2],anova(sat1.lm, sat2.lm)$Df[2],anova(sat1.lm, sat2.lm)$Res[2])
# consider 5000 permutations and save the test stat in fnull
nrep=5000; fnull = rep(NA, nrep)
set.seed(98107)
for (ii in 1:nrep) {
sat.sample = sample(sat)
tmp1 = lm(total~takers, data=sat.sample);
tmp2 = lm(total~takers+ratio+salary, data=sat.sample);
fnull[ii] = anova(tmp1, tmp2)$F[2]
}
mean(fnull> Ftest)
fnull
#set.seed(98107)
for (ii in 1:nrep) {
sat.sample = sample(sat)
tmp1 = lm(total~takers, data=sat.sample);
tmp2 = lm(total~takers+ratio+salary, data=sat.sample);
fnull[ii] = anova(tmp1, tmp2)$F[2]
}
mean(fnull> Ftest)
fnull
head(sat)
sat.sample = sample(sat$total)
head(sat.sample)
?update
set.seed(98107)
for (ii in 1:nrep) {
tmp1 = lm(sample(total)~takers, data=sat.sample);
update(savout, yboot~ .)
tmp2 = update(tmp1, .~ .+ratio+salary);
fnull[ii] = anova(tmp1, tmp2)$F[2]
}
mean(fnull> Ftest)
tmp1 = lm(sample(total)~takers, data=sat.sample);
library(faraway)
data(sat)
sat1.lm=lm(total~takers, data=sat)
sat2.lm=lm(total~takers+ratio+salary, data=sat)
summary(sat1.lm)
summary(sat2.lm)
anova(sat1.lm, sat2.lm)
anova(sat1.lm, sat2.lm)$F[2]
Ftest = anova(sat1.lm, sat2.lm)$F[2]
1-pf(anova(sat1.lm, sat2.lm)$F[2],anova(sat1.lm, sat2.lm)$Df[2],anova(sat1.lm, sat2.lm)$Res[2])
# consider 5000 permutations and save the test stat in fnull
nrep=5; fnull = rep(NA, nrep)
set.seed(98107)
for (ii in 1:nrep) {
tmp1 = lm(sample(total)~takers, data=sat.sample);
tmp2 = update(tmp1, .~ .+ratio+salary);
fnull[ii] = anova(tmp1, tmp2)$F[2]
}
mean(fnull> Ftest)
tmp1 = lm(sample(total)~takers, data=sat.sample);
set.seed(98107)
for (ii in 1:nrep) {
tmp1 = lm(sample(total)~takers, data=sat);
tmp2 = update(tmp1, .~ .+ratio+salary);
fnull[ii] = anova(tmp1, tmp2)$F[2]
}
mean(fnull> Ftest)
tmp1 = lm(sample(total)~takers, data=sat);
tmp2 = update(tmp1, .~ .+ratio+salary);
summary(tmp1)
summary(tmp2)
anova(tmp1, tmp2)
library(faraway)
data(sat)
sat1.lm=lm(total~takers, data=sat)
sat2.lm=lm(total~takers+ratio+salary, data=sat)
summary(sat1.lm)
summary(sat2.lm)
anova(sat1.lm, sat2.lm)
anova(sat1.lm, sat2.lm)$F[2]
Ftest = anova(sat1.lm, sat2.lm)$F[2]
1-pf(anova(sat1.lm, sat2.lm)$F[2],anova(sat1.lm, sat2.lm)$Df[2],anova(sat1.lm, sat2.lm)$Res[2])
# consider 5000 permutations and save the test stat in fnull
nrep=5000; fnull = rep(NA, nrep)
set.seed(98107)
for (ii in 1:nrep) {
tmp1 = lm(sample(total)~takers, data=sat);
tmp2 = update(tmp1, .~ .+ratio+salary);
fnull[ii] = anova(tmp1, tmp2)$F[2]
}
mean(fnull> Ftest)
fnull
nrep=9; fnull = rep(NA, nrep)
set.seed(98107)
for (ii in 1:nrep) {
tmp1 = lm(sample(total)~takers, data=sat);
tmp2 = update(tmp1, .~ .+ratio+salary);
fnull[ii] = anova(tmp1, tmp2)$F[2]
}
mean(fnull> Ftest)
summary(tmp1)
summary(tmp2)
anova(tmp1, tmp2)
nrep=9; fnull = rep(NA, nrep)
set.seed(98107)
for (ii in 1:nrep) {
tmp1 = lm(sample(total)~takers, data=sat);
tmp2 = update(tmp1, .~ takers+ratio+salary);
fnull[ii] = anova(tmp1, tmp2)$F[2]
}
mean(fnull> Ftest)
anova(tmp1, tmp2)
nrep=9; fnull = rep(NA, nrep)
set.seed(98107)
for (ii in 1:nrep) {
sat.sample=sat[sample(nrow(sat), nrow(sat)),]
tmp1 = lm(total~takers, data= sat.sample);
tmp1 = lm(total~takers+ratio+salary, data= sat.sample);
#tmp2 = update(tmp1, .~ .+ ratio+salary);
fnull[ii] = anova(tmp1, tmp2)$F[2]
}
mean(fnull> Ftest)
sat.sample=sat[sample(nrow(sat), nrow(sat)),]
head(sat.sample)
head(sample(sat))
set.seed(98107)
for (ii in 1:nrep) {
sat.sample=sat[sample(nrow(sat), nrow(sat)),]
tmp1 = lm(total~takers, data= sat.sample);
tmp2 = lm(total~takers+ratio+salary, data= sat.sample);
#tmp2 = update(tmp1, .~ .+ ratio+salary);
fnull[ii] = anova(tmp1, tmp2)$F[2]
}
mean(fnull> Ftest)
nrep=5000; fnull = rep(NA, nrep)
set.seed(98107)
for (ii in 1:nrep) {
sat.sample=sat[sample(nrow(sat), nrow(sat)),]
tmp1 = lm(total~takers, data= sat.sample);
tmp2 = lm(total~takers+ratio+salary, data= sat.sample);
#tmp2 = update(tmp1, .~ .+ ratio+salary);
fnull[ii] = anova(tmp1, tmp2)$F[2]
}
mean(fnull> Ftest)
Ftest = anova(sat1.lm, sat2.lm)$F[2]
Ftest
1-pf(anova(sat1.lm, sat2.lm)$F[2],anova(sat1.lm, sat2.lm)$Df[2],anova(sat1.lm, sat2.lm)$Res[2])
summary(sat2.lm)
1-pf(anova(sat1.lm, sat2.lm)$F[2],anova(sat1.lm, sat2.lm)$Df[2],anova(sat1.lm, sat2.lm)$Res[2])
nrep=5000; fnull = rep(NA, nrep)
set.seed(98107)
for (ii in 1:nrep) {
#sat.sample=sat[sample(nrow(sat), nrow(sat)),]
tmp1 = lm(total~takers, data= sat);
tmp2 = lm(total~takers+sample(ratio+salary), data= sat);
#tmp2 = update(tmp1, .~ .+ ratio+salary);
fnull[ii] = anova(tmp1, tmp2)$F[2]
}
mean(fnull> Ftest)
nrep=5000; fnull = rep(NA, nrep)
set.seed(98107)
for (ii in 1:nrep) {
#sat.sample=sat[sample(nrow(sat), nrow(sat)),]
tmp1 = lm(total~takers, data= sat);
#tmp2 = lm(total~takers+sample(ratio+salary), data= sat);
tmp2 = update(tmp1, .~ .+ sample(ratio+salary));
fnull[ii] = anova(tmp1, tmp2)$F[2]
}
mean(fnull> Ftest)
library(faraway)
data(sat)
sat1.lm=lm(total~takers, data=sat)
sat2.lm=lm(total~takers+ratio+salary, data=sat)
summary(sat1.lm)
summary(sat2.lm)
anova(sat1.lm, sat2.lm)
anova(sat1.lm, sat2.lm)$F[2]
Ftest = anova(sat1.lm, sat2.lm)$F[2]
1-pf(anova(sat1.lm, sat2.lm)$F[2],anova(sat1.lm, sat2.lm)$Df[2],anova(sat1.lm, sat2.lm)$Res[2])
# consider 5000 permutations on pop15 to test the coeff differing from 0
savout = lm(sr ~ pop15 + pop75 + dpi + ddpi,savings);
savsumm = summary(savout); savsumm$fstat
1-pf(savsumm$fstat[1], savsumm$fstat[2],savsumm$fstat[3])
coef(savsumm)[2,] #pop15
tnull=rep(NA, nrep); set.seed(48109)
for (ii in 1:nrep) {
tmp = lm(sr~sample(pop15)+ pop75 + dpi + ddpi,savings);
tnull[ii] = coef(summary(tmp))[2,3]
}
mean(abs(tnull) > abs(coef(savsumm)[2,3]))
# consider 5000 permutations on pop15 to test the coeff differing from 0
satRatio.lm=lm(total~takers+ratio+salary, data=sat)
satSum = summary(satRatio.lm); satSum$fstat
1-pf(satSum$fstat[1], satSum$fstat[2],satSum$fstat[3])
coef(satSum)[3,] #pop15
tnull=rep(NA, nrep); set.seed(48109)
for (ii in 1:nrep) {
tmp = lm(total~takers+sample(ratio)+salary, data=sat);
tnull[ii] = coef(summary(tmp))[3,3]
}
mean(abs(tnull) > abs(coef(satSum)[3,3]))
# consider 5000 permutations on Salary to test the coeff differing from 0
library(faraway)
data(sat)
satRatio.lm=lm(total~takers+ratio+salary, data=sat)
satSum = summary(satRatio.lm); satSum$fstat
1-pf(satSum$fstat[1], satSum$fstat[2],satSum$fstat[3])
coef(satSum)[4,]
tnull=rep(NA, nrep); set.seed(48109)
for (ii in 1:nrep) {
tmp = lm(total~takers+ratio+sample(salary), data=sat);
tnull[ii] = coef(summary(tmp))[4,3]
}
mean(abs(tnull) > abs(coef(satSum)[4,3]))
library(faraway)
data(teengamb)
satRatio.lm=lm(Y~sex+status+income+verbal, data=teengamb)
Y.org = teengamb$gamble
Y.log = log(teengamb$gamble + 1)
org.lm=lm(Y.org~sex+status+income+verbal, data=teengamb)
log.lm=lm(Y.log~sex+status+income+verbal, data=teengamb)
residuals(org.lm)
plot(residuals(org.lm),fitted(org.lm))
plot(fitted(org.lm),residuals(org.lm))
plot(fitted(org.lm),residuals(org.lm))
plot(fitted(org.lm),residuals(org.lm))
org.lm$residuals
plot(fitted(log.lm),residuals(log.lm))
abline(h=0)
summary(lm(residuals(org.lm)~fitted(org.lm), data=teengamb))
summary(lm(residuals(org.lm)~fitted(org.lm)))
qqnorm(residuals(org.lm), ylab="Residuals")
qqline(residuals(org.lm))
shapiro.test(residuals(org.lm))
shapiro.test(residuals(org.lm))
shapiro.test(org.lm$residuals)
shapiro.test(org.lm$residual)
org.lm$residual
class(org.lm$residual)
shapiro.test(org.lm$residual)
shapiro.test(log.lm$residual)
> qqnorm(residuals(log.lm), ylab="Residuals")
> qqline(residuals(log.lm))
qqnorm(residuals(log.lm), ylab="Residuals")
qqline(residuals(log.lm))
hist(residuals(log.lm), xlab="Residuals")
qqnorm(residuals(log.lm), ylab="Residuals")
qqline(residuals(log.lm))
summary(lm(abs(residuals(org.lm)) ~ fitted(org.lm)))
influence(org.lm)
influence(org.lm)$hat
halfnormal(influence(org.lm)$hat)
halfnormal(influence(org.lm)$hat, nlab=2)
library(faraway)
halfnormal(influence(org.lm)$hat)
halfnormal(influence(org.lm)$hat, nlab=2)
halfnorm(influence(org.lm)$hat)
halfnorm(influence(org.lm)$hat, nlab=2)
halfnorm(lm.influence(org.lm)$hat, nlab = 2, ylab="Leverages")
halfnorm(influence(org.lm)$hat)
halfnorm(lm.influence(org.lm)$hat, nlab = 2, ylab="Leverages")
halfnorm(influence(org.lm)$hat, nlab = 2, ylab="Leverages")
halfnorm(influence(org.lm)$hat,  ylab="Leverages")
qqline(influence(org.lm)$hat)
qqline(influence(org.lm)$hat)
data(savings)
result <- lm(sr ~ ., data=savings)
halfnorm(lm.influence(result)$hat, nlab = 2,
ylab="Leverages")
savings[c(44,49),]
savings[c(44,49),]
hatvalues(org.lm)
influence(org.lm)$hat
halfnorm(lm.influence(org.lm)$hat, nlab = 2, ylab="Leverages")
qqline(lm.influence(org.lm)$hat)
halfline(lm.influence(org.lm)$hat)
halfnorm(lm.influence(org.lm)$hat, nlab = 2, ylab="Leverages")
halfnorm(influence(org.lm)$hat, ylab="Leverages")
influence(org.lm)$hat[influence(org.lm)$hat>2*5/47]
size(teengamb)
lenght(teengamb)
nrow(teengamb)
size(teengamb)
length(teengamb)
dim(teengamb)
influence(org.lm)$hat[influence(org.lm)$hat>2*(1+ncol(teengamb))/nrorw(teengamb)]
influence(org.lm)$hat[influence(org.lm)$hat>2*ncol(teengamb)/nrorw(teengamb)]
influence(org.lm)$hat[influence(org.lm)$hat>2*ncol(teengamb)/nrow(teengamb)]
influence(org.lm)[influence(org.lm)$hat>2*ncol(teengamb)/nrow(teengamb)]
influence(org.lm)$hat[influence(org.lm)$hat>2*ncol(teengamb)/nrow(teengamb)]
influence(log.lm)$hat[influence(log.lm)$hat>2*ncol(teengamb)/nrow(teengamb)]
ti <- rstudent(org.lm)
max(abs(ti))
max(abs(ti))
which(ti == max(abs(ti)))
2*(1-pt(max(abs(ti)), df=47-4-1))
2*(1-pt(max(abs(ti)), df=47-5-1))
0.05/47
ti <- rstudent(log.lm)
which(ti == max(abs(ti)))
max(abs(ti))
which(ti == max(abs(ti)))
2*(1-pt(max(abs(ti)), df=47-5-1))
which(ti == max(abs(ti)))
ti
absti=abs(ti)
max(absti)
which(absti == max(absti))
ti <- rstudent(org.lm)
which(abs(ti) == max(abs(ti)))
2*(1-pt(max(abs(ti)), df=nrow(teengamb)-ncol(teengamb)-1))
ti.org <- rstudent(org.lm)
which(abs(ti.org) == max(abs(ti.org)))
2*(1-pt(max(abs(ti.org)), df=nrow(teengamb)-ncol(teengamb)-1))
> 0.05/nrow(teengamb)
0.05/nrow(teengamb)
ti.log <- rstudent(log.lm)
which(abs(ti.log) == max(abs(ti.log)))
2*(1-pt(max(abs(ti.log)), df=nrow(teengamb)-ncol(teengamb)-1))
2*(1-pt(abs(ti.org)[39], df=nrow(teengamb)-ncol(teengamb)-1))
2*(1-pt(abs(ti.org)[36], df=nrow(teengamb)-ncol(teengamb)-1))
2*(1-pt(abs(ti.org)[5], df=nrow(teengamb)-ncol(teengamb)-1))
2*(1-pt(abs(ti.org)[46], df=nrow(teengamb)-ncol(teengamb)-1))
2*(1-pt(abs(ti.org)[24], df=nrow(teengamb)-ncol(teengamb)-1))
2*(1-pt(abs(ti.org)[36], df=nrow(teengamb)-ncol(teengamb)-1))
2*(1-pt(abs(ti.org)[39], df=nrow(teengamb)-ncol(teengamb)-1))
plot(rstudent(log.lm),fitted(log.lm))
identify(rstudent(log.lm),fitted(log.lm))
plot(fitted(log.lm),rstudent(log.lm))
identify(fitted(log.lm),rstudent(log.lm))
identify(fitted(log.lm),rstudent(log.lm))
2*(1-pt(abs(ti.log)[36], df=nrow(teengamb)-ncol(teengamb)-1))
2*(1-pt(abs(ti.log)[23], df=nrow(teengamb)-ncol(teengamb)-1))
2*(1-pt(abs(ti.log)[5], df=nrow(teengamb)-ncol(teengamb)-1))
2*(1-pt(abs(ti.log)[39], df=nrow(teengamb)-ncol(teengamb)-1))
plot(fitted(log.lm),rstudent(log.lm))
identify(fitted(log.lm),rstudent(log.lm))
2*(1-pt(abs(ti.log)[c(5,23,36,39)], df=nrow(teengamb)-ncol(teengamb)-1))
plot(fitted(org.lm),rstudent(org.lm))
identify(fitted(org.lm),rstudent(org.lm))
2*(1-pt(abs(ti.log)[c(24,36,39)], df=nrow(teengamb)-ncol(teengamb)-1))
2*(1-pt(abs(ti.org)[c(24,36,39)], df=nrow(teengamb)-ncol(teengamb)-1))
plot(fitted(org.lm),rstudent(org.lm))
identify(fitted(org.lm),rstudent(org.lm))
plot(fitted(org.lm),rstudent(org.lm))
identify(fitted(org.lm),rstudent(org.lm))
log.lm=lm(Y.log~verbal, data=teengamb)
summary(log.lm)
predict(log.lm)
?predict
predict(log.lm, newdata=6, interval = c("confidence", "prediction"),level = 0.95)
predict(log.lm, interval = c("confidence", "prediction"),level = 0.95)
new.verbal=6
predict(log.lm, newdata=new.verbal, interval = c("confidence", "prediction"),level = 0.95)
predict(log.lm, new.verbal, interval = c("confidence", "prediction"),level = 0.95)
predict(log.lm, new.verbal, interval = c("confidence"),level = 0.95)
new.verbal(verbal=6)
new.verbal=data.frame(verbal=6)
predict(log.lm, new.verbal, interval = c("confidence"),level = 0.95)
predict(log.lm, new.verbal, interval = c("confidence", "prediction"),level = 0.95)
predict(log.lm, new.verbal, interval = c("confidence", "prediction"))
predict(log.lm, new.verbal, interval = c("confidence"))
predict(log.lm, new.verbal, interval = c("prediction"))
predict(log.lm, new.verbal, interval = c("prediction"), level=0.95)
log.predict=predict(log.lm, new.verbal, interval = c("prediction"), level=0.95)
log.predict[1]
exp(log.predict)-1
exp(5)
exp(5.1)
cook <- cooks.distance(log.lm)
halfnorm(cook, nlab = 3, ylab="Cook’s distance")
halfnorm(cook, nlab = 3, ylab="Cook’s distance")
halfnorm(cook, nlab = 2, ylab="Cook’s distance")
halfnorm(cook, nlab = 4, ylab="Cook’s distance")
halfnorm(cook, nlab = 3, ylab="Cook’s distance")
result.libya <- lm(Y.log~verbal, data=teengamb,subset=(cook < max(cook)))
summary(result.libya)
cook <- cooks.distance(result.libya)
> halfnorm(cook, nlab = 3, ylab="Cook’s distance")
cook <- cooks.distance(result.libya)
halfnorm(cook, nlab = 3, ylab="Cook’s distance")
cook <- cooks.distance(result.libya)
halfnorm(cook, nlab = 2, ylab="Cook’s distance")
log.lm=lm(Y.log~sex+status+income+verbal, data=teengamb)
cook <- cooks.distance(log.lm)
halfnorm(cook, nlab = 2, ylab="Cook’s distance")
cook <- cooks.distance(org.lm)
halfnorm(cook, nlab = 2, ylab="Cook’s distance")
org.cook <- cooks.distance(result.libya)
halfnorm(org.cook, nlab = 2, ylab="Org.Cook’s distance")
org.cook <- cooks.distance(org.lm)
halfnorm(org.cook, nlab = 2, ylab="Org.Cook’s distance")
log.cook <- cooks.distance(log.lm)
halfnorm(log.cook, nlab = 2, ylab="Log.Cook’s distance")
org.cook <- cooks.distance(org.lm)
halfnorm(org.cook, nlab = 5, ylab="Org.Cook’s distance")
